<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <context:annotation-config />

     <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://${application.db_host}/${application.db_name}" />
        <property name="username" value="${application.db_user}" />
        <property name="password" value="${application.db_pass}" />
    </bean>

    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/auth/**" access="permitAll"/>
        <security:intercept-url pattern="/rest/auth/**" access="permitAll"/>
        <security:intercept-url pattern="/*" access="hasAnyRole('ADM')"/>
        
        <security:form-login
            login-processing-url="/login"
            login-page="/auth/login.jsp"
            username-parameter="username"
            password-parameter="password"
            default-target-url="/index.jsp"
            
            authentication-failure-url="/auth/login.jsp?auth=fail" />
        <security:logout invalidate-session="true" logout-url="/auth/logout" logout-success-url="/" />
    </security:http>


    <!-- A custom service where Spring will retrieve users and their corresponding    access levels -->
    <bean id="UsuarioServiceImpl"  class="br.com.ibebidas.service.impl.UsuarioServiceImpl" />


    <!-- Declare an authentication-manager to use a custom userDetailsService -->
    <security:authentication-manager>
        <security:authentication-provider  user-service-ref="UsuarioServiceImpl">
        <security:password-encoder hash="md5"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>
    

</beans>